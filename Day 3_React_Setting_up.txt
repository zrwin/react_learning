1. What is a module?

Ans.  a module refers to a reusable piece of code that encapsulates related functionalities, components, or logic 
    within a single file.

2. What is package?

Ans.  In React, a "package" generally refers to a collection of code, files, and functionalities that are bundled 
    together and distributed for use within a React application. Packages in React are typically JavaScript libraries,
     modules, or dependencies that provide specific features, utilities, or components to enhance the development
      process.

3. What is difference between module and package?

Ans. Difference between Module and Package:

    Module: A single file or set of files containing related code that can be imported/exported within an application.
    Package: A collection of modules, functionalities, or libraries bundled together and distributed as a single unit via package managers. 
    Packages can contain multiple modules and offer various features or utilities.

4. Waht is NPM?

Ans. NPM stands for Node Package Manager. It is the default package manager for Node.js, a JavaScript runtime environment.
     NPM is used to manage and distribute JavaScript libraries and packages that developers can use in their projects, including React applications.


5. What is webpack?

Ans. Webpack is a powerful and popular module bundler for JavaScript applications. It's commonly used in modern web development, 
    especially with frameworks like React, Angular, and Vue.js, but it can be used with any JavaScript-based project.
    Webpack's primary purpose is to take multiple modules (such as JavaScript files, CSS files, images, etc.) and their dependencies and
     bundle them together into a single optimized bundle or multiple bundles that are more efficient for deployment in a web browser.


6. What are the files and folders inside a project folder(package.json, package-lock.json or yarn.lock, .gitignore,node_modules and public)?

Ans. package.json is a file that contains metadata about the project, such as its name, version, entry points, dependencies, scripts, and other configurations.
    package.json is intended for human-readable information and can be edited by developers to manage project details.

    package-lock.json (or yarn.lock for Yarn) is a lock file generated by npm or Yarn respectively.It ensures that every time dependencies are installed, the exact same versions are installed, 
    thus maintaining consistency across different environments and builds. The lock file is automatically generated and updated whenever dependencies are modified (e.g., when running npm install or yarn add). 
    It is not intended to be edited manually. This file is primarily used by package managers to install the exact versions of dependencies specified in the lock file, ensuring reproducible builds.


    .gitignore: This file specifies patterns of files or directories that should be ignored by the version control system, such as Git. It's used to exclude files or folders 
    from being committed to the repository, such as the node_modules directory, build output, editor-specific files, or sensitive data.

